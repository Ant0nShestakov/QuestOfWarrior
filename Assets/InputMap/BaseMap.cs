//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/InputMap/BaseMap.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @BaseMap: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @BaseMap()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""BaseMap"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""a9160a29-2484-42fc-8a8f-86453e0bef4c"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""7d4f2484-6ffe-4f1b-af51-caa4314d8678"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""fb255d0c-c33c-4273-ad9b-944ef6ff7a46"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AutoAttack"",
                    ""type"": ""Button"",
                    ""id"": ""a41bf26a-bf03-479c-ab0b-27fda70d4a60"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FirstSpecialAttack"",
                    ""type"": ""Button"",
                    ""id"": ""74eca32c-6ddc-49fb-95b8-a9099db5f8c1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondSpecialAttack"",
                    ""type"": ""Button"",
                    ""id"": ""733b8718-54dc-44f1-960f-e194c57aa477"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ThridSpecialAttack"",
                    ""type"": ""Button"",
                    ""id"": ""108e14aa-d78a-4c24-979a-83cdb67bd15d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FourthSpecialAttack"",
                    ""type"": ""Button"",
                    ""id"": ""dcef9e7f-9e57-4ece-a611-926dbd734758"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FifthSpecialAttack"",
                    ""type"": ""Button"",
                    ""id"": ""2dfbc2e1-6268-4aa5-8181-378d3dc469ac"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SixSpecialAttack"",
                    ""type"": ""Button"",
                    ""id"": ""59ed4ad7-0491-4d02-b1d4-b49691093bd3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SeventhSpecialAttack"",
                    ""type"": ""Button"",
                    ""id"": ""33f86c0c-a4c8-4f05-8d27-afa85e80d365"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EighthSpecialAttack"",
                    ""type"": ""Button"",
                    ""id"": ""c966b8db-b33b-4422-bd8e-b8e35f0478ee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Block"",
                    ""type"": ""Button"",
                    ""id"": ""652d117b-3c28-4945-9d3a-5274a4b6abde"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""3af83cf1-ada0-45e8-9ce8-24febd535fdc"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""96474109-bc7c-4b3b-b5ab-c1cb2838447d"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d1d4b9b7-1974-4ed7-96e4-9c30f3e79d8d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""1322909b-a018-4145-99c6-48f06376be99"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""30122071-f0ab-425b-aab1-c57664f74818"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""07cfbe7d-fb88-4695-a538-c219f5939115"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8287ff9c-2a3a-41db-b86b-58acca7c029b"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""802bd02b-8b13-4cc2-9d6d-8174ddcfef42"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""AutoAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""27031d40-9aa1-4b3e-be57-ec03976beeb9"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""FirstSpecialAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c15b07de-31e9-4524-9249-fe2994de903b"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SecondSpecialAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""81f0dd9f-18df-4878-870f-46549037d2bb"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""ThridSpecialAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cf999e66-3d7d-4a2d-98f3-6fd32daf8f60"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""FourthSpecialAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""db25946f-ac21-4771-b325-011d526cd3bc"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""FifthSpecialAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""efa65aba-c571-47ba-ae4e-a9c6a4460122"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SixSpecialAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""49a831c1-f69e-4ca1-b7cf-b9d931a60c35"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SeventhSpecialAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9aab33db-61af-47e3-8fe8-9cf9569783f3"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""366006d8-0260-4bde-bbc1-f538d9bccc8e"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""EighthSpecialAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3bcf2b27-baf6-4a4c-925b-80982a8eadf4"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector2"",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard&Mouse"",
            ""bindingGroup"": ""Keyboard&Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_AutoAttack = m_Player.FindAction("AutoAttack", throwIfNotFound: true);
        m_Player_FirstSpecialAttack = m_Player.FindAction("FirstSpecialAttack", throwIfNotFound: true);
        m_Player_SecondSpecialAttack = m_Player.FindAction("SecondSpecialAttack", throwIfNotFound: true);
        m_Player_ThridSpecialAttack = m_Player.FindAction("ThridSpecialAttack", throwIfNotFound: true);
        m_Player_FourthSpecialAttack = m_Player.FindAction("FourthSpecialAttack", throwIfNotFound: true);
        m_Player_FifthSpecialAttack = m_Player.FindAction("FifthSpecialAttack", throwIfNotFound: true);
        m_Player_SixSpecialAttack = m_Player.FindAction("SixSpecialAttack", throwIfNotFound: true);
        m_Player_SeventhSpecialAttack = m_Player.FindAction("SeventhSpecialAttack", throwIfNotFound: true);
        m_Player_EighthSpecialAttack = m_Player.FindAction("EighthSpecialAttack", throwIfNotFound: true);
        m_Player_Block = m_Player.FindAction("Block", throwIfNotFound: true);
        m_Player_Look = m_Player.FindAction("Look", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_AutoAttack;
    private readonly InputAction m_Player_FirstSpecialAttack;
    private readonly InputAction m_Player_SecondSpecialAttack;
    private readonly InputAction m_Player_ThridSpecialAttack;
    private readonly InputAction m_Player_FourthSpecialAttack;
    private readonly InputAction m_Player_FifthSpecialAttack;
    private readonly InputAction m_Player_SixSpecialAttack;
    private readonly InputAction m_Player_SeventhSpecialAttack;
    private readonly InputAction m_Player_EighthSpecialAttack;
    private readonly InputAction m_Player_Block;
    private readonly InputAction m_Player_Look;
    public struct PlayerActions
    {
        private @BaseMap m_Wrapper;
        public PlayerActions(@BaseMap wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @AutoAttack => m_Wrapper.m_Player_AutoAttack;
        public InputAction @FirstSpecialAttack => m_Wrapper.m_Player_FirstSpecialAttack;
        public InputAction @SecondSpecialAttack => m_Wrapper.m_Player_SecondSpecialAttack;
        public InputAction @ThridSpecialAttack => m_Wrapper.m_Player_ThridSpecialAttack;
        public InputAction @FourthSpecialAttack => m_Wrapper.m_Player_FourthSpecialAttack;
        public InputAction @FifthSpecialAttack => m_Wrapper.m_Player_FifthSpecialAttack;
        public InputAction @SixSpecialAttack => m_Wrapper.m_Player_SixSpecialAttack;
        public InputAction @SeventhSpecialAttack => m_Wrapper.m_Player_SeventhSpecialAttack;
        public InputAction @EighthSpecialAttack => m_Wrapper.m_Player_EighthSpecialAttack;
        public InputAction @Block => m_Wrapper.m_Player_Block;
        public InputAction @Look => m_Wrapper.m_Player_Look;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @AutoAttack.started += instance.OnAutoAttack;
            @AutoAttack.performed += instance.OnAutoAttack;
            @AutoAttack.canceled += instance.OnAutoAttack;
            @FirstSpecialAttack.started += instance.OnFirstSpecialAttack;
            @FirstSpecialAttack.performed += instance.OnFirstSpecialAttack;
            @FirstSpecialAttack.canceled += instance.OnFirstSpecialAttack;
            @SecondSpecialAttack.started += instance.OnSecondSpecialAttack;
            @SecondSpecialAttack.performed += instance.OnSecondSpecialAttack;
            @SecondSpecialAttack.canceled += instance.OnSecondSpecialAttack;
            @ThridSpecialAttack.started += instance.OnThridSpecialAttack;
            @ThridSpecialAttack.performed += instance.OnThridSpecialAttack;
            @ThridSpecialAttack.canceled += instance.OnThridSpecialAttack;
            @FourthSpecialAttack.started += instance.OnFourthSpecialAttack;
            @FourthSpecialAttack.performed += instance.OnFourthSpecialAttack;
            @FourthSpecialAttack.canceled += instance.OnFourthSpecialAttack;
            @FifthSpecialAttack.started += instance.OnFifthSpecialAttack;
            @FifthSpecialAttack.performed += instance.OnFifthSpecialAttack;
            @FifthSpecialAttack.canceled += instance.OnFifthSpecialAttack;
            @SixSpecialAttack.started += instance.OnSixSpecialAttack;
            @SixSpecialAttack.performed += instance.OnSixSpecialAttack;
            @SixSpecialAttack.canceled += instance.OnSixSpecialAttack;
            @SeventhSpecialAttack.started += instance.OnSeventhSpecialAttack;
            @SeventhSpecialAttack.performed += instance.OnSeventhSpecialAttack;
            @SeventhSpecialAttack.canceled += instance.OnSeventhSpecialAttack;
            @EighthSpecialAttack.started += instance.OnEighthSpecialAttack;
            @EighthSpecialAttack.performed += instance.OnEighthSpecialAttack;
            @EighthSpecialAttack.canceled += instance.OnEighthSpecialAttack;
            @Block.started += instance.OnBlock;
            @Block.performed += instance.OnBlock;
            @Block.canceled += instance.OnBlock;
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @AutoAttack.started -= instance.OnAutoAttack;
            @AutoAttack.performed -= instance.OnAutoAttack;
            @AutoAttack.canceled -= instance.OnAutoAttack;
            @FirstSpecialAttack.started -= instance.OnFirstSpecialAttack;
            @FirstSpecialAttack.performed -= instance.OnFirstSpecialAttack;
            @FirstSpecialAttack.canceled -= instance.OnFirstSpecialAttack;
            @SecondSpecialAttack.started -= instance.OnSecondSpecialAttack;
            @SecondSpecialAttack.performed -= instance.OnSecondSpecialAttack;
            @SecondSpecialAttack.canceled -= instance.OnSecondSpecialAttack;
            @ThridSpecialAttack.started -= instance.OnThridSpecialAttack;
            @ThridSpecialAttack.performed -= instance.OnThridSpecialAttack;
            @ThridSpecialAttack.canceled -= instance.OnThridSpecialAttack;
            @FourthSpecialAttack.started -= instance.OnFourthSpecialAttack;
            @FourthSpecialAttack.performed -= instance.OnFourthSpecialAttack;
            @FourthSpecialAttack.canceled -= instance.OnFourthSpecialAttack;
            @FifthSpecialAttack.started -= instance.OnFifthSpecialAttack;
            @FifthSpecialAttack.performed -= instance.OnFifthSpecialAttack;
            @FifthSpecialAttack.canceled -= instance.OnFifthSpecialAttack;
            @SixSpecialAttack.started -= instance.OnSixSpecialAttack;
            @SixSpecialAttack.performed -= instance.OnSixSpecialAttack;
            @SixSpecialAttack.canceled -= instance.OnSixSpecialAttack;
            @SeventhSpecialAttack.started -= instance.OnSeventhSpecialAttack;
            @SeventhSpecialAttack.performed -= instance.OnSeventhSpecialAttack;
            @SeventhSpecialAttack.canceled -= instance.OnSeventhSpecialAttack;
            @EighthSpecialAttack.started -= instance.OnEighthSpecialAttack;
            @EighthSpecialAttack.performed -= instance.OnEighthSpecialAttack;
            @EighthSpecialAttack.canceled -= instance.OnEighthSpecialAttack;
            @Block.started -= instance.OnBlock;
            @Block.performed -= instance.OnBlock;
            @Block.canceled -= instance.OnBlock;
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard&Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnAutoAttack(InputAction.CallbackContext context);
        void OnFirstSpecialAttack(InputAction.CallbackContext context);
        void OnSecondSpecialAttack(InputAction.CallbackContext context);
        void OnThridSpecialAttack(InputAction.CallbackContext context);
        void OnFourthSpecialAttack(InputAction.CallbackContext context);
        void OnFifthSpecialAttack(InputAction.CallbackContext context);
        void OnSixSpecialAttack(InputAction.CallbackContext context);
        void OnSeventhSpecialAttack(InputAction.CallbackContext context);
        void OnEighthSpecialAttack(InputAction.CallbackContext context);
        void OnBlock(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
    }
}
